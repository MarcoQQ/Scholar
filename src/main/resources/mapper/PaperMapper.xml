<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="com.web.bean.Paper">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="popularity" jdbcType="DOUBLE" property="popularity" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="discipline_id" jdbcType="INTEGER" property="disciplineId" />
    <result column="abstract1" jdbcType="VARCHAR" property="abstract1" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <resultMap id="ResultMap" type="com.web.bean.Paper">
    <id column="pid" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="popularity" jdbcType="DOUBLE" property="popularity" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="discipline_id" jdbcType="INTEGER" property="disciplineId" />
    <result column="abstract1" jdbcType="VARCHAR" property="abstract1" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, path, popularity, degree, price, subject_id, discipline_id, abstract1, 
    time
  </sql>
  <select id="selectByExample" parameterType="com.web.bean.PaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_paper
    where name = #{name}
  </select>
  <select id="selectByDiscipline" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_paper, b_discipline
    where b_paper.discipline_id = #{disciplineId}
  </select>
  <select id="selectByUser" parameterType="java.lang.Integer" resultMap="ResultMap">
    select
      b_paper.id pid, name, path, popularity, degree, b_paper.price, subject_id, discipline_id, abstract1
    from b_paper, r_user_paper
    where b_paper.id = r_user_paper.paper_id and r_user_paper.user_id = #{userId};
  </select>
  <select id="selectByInstitute" parameterType="java.lang.Integer" resultMap="ResultMap">
    select
      b_paper.id pid, name, path, popularity, degree, b_paper.price, subject_id, discipline_id, abstract1
    from
      (select s_scholar.id from s_scholar where #{instituteId} = s_scholar.institute_id) scholar, r_scholar_paper, b_paper
    where b_paper.id = r_scholar_paper.paper_id and r_scholar_paper.scholar_id = scholar.id;
  </select>
  <select id="orderByAscendingPopularity" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_paper
    order by popularity asc
    limit #{number};
  </select>
  <select id="orderByDescendingPopularity" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_paper
    order by popularity desc
    limit #{number};
  </select>
  <select id="selectPaperForSearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_paper
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from b_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.bean.PaperExample">
    delete from b_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.bean.Paper">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_paper (name, path, popularity, 
      degree, price, subject_id, 
      discipline_id, abstract1, time
      )
    values (#{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{popularity,jdbcType=DOUBLE}, 
      #{degree,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{disciplineId,jdbcType=INTEGER}, #{abstract1,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.web.bean.Paper">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="popularity != null">
        popularity,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="disciplineId != null">
        discipline_id,
      </if>
      <if test="abstract1 != null">
        abstract1,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="popularity != null">
        #{popularity,jdbcType=DOUBLE},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null">
        #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="abstract1 != null">
        #{abstract1,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.bean.PaperExample" resultType="java.lang.Long">
    select count(*) from b_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_paper
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.popularity != null">
        popularity = #{record.popularity,jdbcType=DOUBLE},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.disciplineId != null">
        discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      </if>
      <if test="record.abstract1 != null">
        abstract1 = #{record.abstract1,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_paper
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      popularity = #{record.popularity,jdbcType=DOUBLE},
      degree = #{record.degree,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      abstract1 = #{record.abstract1,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.bean.Paper">
    update b_paper
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="popularity != null">
        popularity = #{popularity,jdbcType=DOUBLE},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null">
        discipline_id = #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="abstract1 != null">
        abstract1 = #{abstract1,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.bean.Paper">
    update b_paper
    set name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      popularity = #{popularity,jdbcType=DOUBLE},
      degree = #{degree,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      discipline_id = #{disciplineId,jdbcType=INTEGER},
      abstract1 = #{abstract1,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>